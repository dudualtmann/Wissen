package model;

import java.util.List;

import javax.persistence.Query;

import org.hibernate.HibernateException;
import org.hibernate.Session;

import control.Curso;
import control.Modulo;

public class MCurso {
	
	public String errorMsg;
	
	public boolean cadastrar(Curso c) {
	
	Session session = null;
	try {

		session = HibernateUtil.abrirSession();

		session.save(c);

		session.getTransaction().commit();

		if(session!=null)
			session.close();
		// fechando a conexao
	} catch (HibernateException e) {
		if(session!=null)
			session.close();
		errorMsg = e.toString();
		return false;
	}

	return true;
	}
	
	public Curso find(Curso c) {
		
		Session session = null;
		try {

			session = HibernateUtil.abrirSession();

			c = session.find(Curso.class,c.getId());

			session.getTransaction().commit();

			if(session!=null)
				session.close();
			// fechando a conexao
		} catch (HibernateException e) {
			if(session!=null)
				session.close();
			errorMsg = e.toString();
			return null;
		}
		
		if(c == null) {
			errorMsg = "Não foi possível encontrar o curso.";
			return null;
		}

		return c;
		}
	
	public List<Modulo> getModulos(Curso c){
		Session session = null;
		List<Modulo> list = null;

		try {
			
			
			
			session = HibernateUtil.abrirSession();
	        
	        String sql = "FROM Modulo m  WHERE curso_id = :id";
	        Query query = session.createQuery(sql);
	        
	        query.setParameter("id", c.getId());
	        
	        list = (List<Modulo>) query.getResultList();
	        
	        session.getTransaction().commit();
	        
	        if(session != null)
				session.close();
	        
	        if(list==null ||list.isEmpty()) {
	        	errorMsg = "Não foram encontrados módulos nesse curso";
	        	return null;
	        }
	        // fechando a conexao
			} catch( HibernateException e ) {
				if(session != null)
					session.close();
				errorMsg = e.toString();
				return null;
			}
		
		return list;
	}
	
	public List<Curso> searchCursos(String arg) {
		// User contem 'arg' -- usar SELECT * FROM users WHERE nome LIKE '%arg%'
		Session session = null;
		List<Curso> list = null;

		try {
			
			
			
			session = HibernateUtil.abrirSession();
	        
	        String sql = "FROM Curso c WHERE title LIKE '%"+arg+"%'";
	        
	        list = session.createQuery(sql,Curso.class).getResultList();
	        
	        session.getTransaction().commit();
	        
	        if(session != null)
				session.close();
	        
	        if(list==null ||list.isEmpty()) {
	        	errorMsg = "Não Foi encontrado nenhum Curso similar a '"+arg+"', verifique se o nome foi digitado corretamente";
	        	return null;
	        }
	        // fechando a conexao
			} catch( HibernateException e ) {
				if(session != null)
					session.close();
				errorMsg = e.toString();
				return null;
			}
		
		return list;

	}
	
	public List<Curso> ultimosCursos() {
		
		Session session = null;
		List<Curso> list = null;

		try {
			
			
			
			session = HibernateUtil.abrirSession();
	        
	        String sql = "FROM Curso c";
	        
	        list = session.createQuery(sql,Curso.class).getResultList();
	        
	        session.getTransaction().commit();
	        
	        if(session != null)
				session.close();
	        
	        if(list==null ||list.isEmpty()) {
	        	errorMsg = "Não Foi encontrado nenhum Curso similar a '"+arg+"', verifique se o nome foi digitado corretamente";
	        	return null;
	        }
	        // fechando a conexao
			} catch( HibernateException e ) {
				if(session != null)
					session.close();
				errorMsg = e.toString();
				return null;
			}
		
		return list;

	}

}
