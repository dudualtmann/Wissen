package control;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.SelectBeforeUpdate;

import model.MCurso;
import model.MModulo;

@Entity
@Table(name = "cursos")
@DynamicUpdate(value = true)
@SelectBeforeUpdate(value = true)
@DynamicInsert(value = true)
public class Curso {

	@Transient
	public String errorMsg;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	protected int id;

	@Column(length = 50, nullable = false)
	private String title;

	@Column(length = 40, nullable = false)
	private String nameInstrutor;

	@Column(nullable = false)
	private double price;

	@Column(columnDefinition = "TEXT NOT NULL")
	private String description;

	@Column(columnDefinition = "TEXT NOT NULL")
	private String requirements;

	@Column(nullable = false)
	private String language;

	@Column(nullable = false)
	private String targetAudience;

	@Column(nullable = false)
	private String genre;

	@Column(nullable = false)
	private File photo;

	@Column(columnDefinition = "INT DEFAULT 0")
	private int status; // 0 - Curso Ativa / 1 - Curso Deletado / 2 - Curso Inativo/Pendente

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "instrutor_curso", joinColumns = { @JoinColumn(name = "curso_id") }, inverseJoinColumns = {
			@JoinColumn(name = "instrutor_id") }, foreignKey = @ForeignKey(name = "FK_INSTRUTOR_CURSO"))
	List<Instrutor> listaInstrutores = new ArrayList<Instrutor>();
	
	
	@ManyToMany(mappedBy = "listaCursosPedidos")
    private List<Pedido> listaPedidos = new ArrayList<Pedido>();
	
	@ManyToMany(mappedBy = "listaCursosCarrinho")
    List<Carrinho> listaCarrinhos = new ArrayList<Carrinho>();
	
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "cursoModulo")
	private List<Modulo> listaModulos;

	public Curso() {

	}

	public Curso(String title, String nameInstrutor, String price, String description, String requirements,
			String language, String targetAudience, String genre, File photo, Instrutor instrutor) {

		this.title = title;
		this.nameInstrutor = nameInstrutor;
		if (price != null && !price.trim().equals(""))
			this.price = Double.parseDouble(price);
		this.description = description;
		this.requirements = requirements;
		this.language = language;
		this.targetAudience = targetAudience;
		this.genre = genre;
		this.photo = photo;
		this.listaInstrutores.add(instrutor);
	}

	public boolean cadastrar() {

		MCurso mc = new MCurso();
		if (!mc.cadastrar(this)) {
			errorMsg = mc.errorMsg;
			return false;
		}
		return true;
	}
	
	public boolean find(String idCurso) {
		
		if(idCurso != null && !idCurso.trim().isEmpty()) {
			idCurso = idCurso.trim();
			this.id = Integer.parseInt(idCurso);
		}
		
		MCurso mc = new MCurso();
		Curso c = mc.find(this);
		
		if(c == null) {
			errorMsg = mc.errorMsg;
			return false;
		}
		
		this.title = c.title;
		this.nameInstrutor = c.nameInstrutor;
		this.price = c.price;
		this.description = c.description;
		this.requirements = c.requirements;
		this.language = c.language;
		this.targetAudience = c.targetAudience;
		this.genre = c.genre;
		this.photo = c.photo;
		this.listaInstrutores = c.listaInstrutores;
		this.id = c.id;
		this.listaPedidos = c.listaPedidos;
		
		return true;
	}
	
	public List<Modulo> getModulos(){
		MCurso mc = new MCurso();
		listaModulos = mc.getModulos(this);
		
		if(listaModulos == null) {
			errorMsg = mc.errorMsg;
			return null;
		}
		
		return listaModulos;
	}

	// Getters and Setters

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getNameInstrutor() {
		return nameInstrutor;
	}

	public void setNameInstrutor(String nameInstrutor) {
		this.nameInstrutor = nameInstrutor;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getRequirements() {
		return requirements;
	}

	public void setRequirements(String requirements) {
		this.requirements = requirements;
	}

	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public String getTargetAudience() {
		return targetAudience;
	}

	public void setTargetAudience(String targetAudience) {
		this.targetAudience = targetAudience;
	}

	public String getGenre() {
		return genre;
	}

	public void setGenre(String genre) {
		this.genre = genre;
	}

	public File getPhoto() {
		return photo;
	}

	public void setPhoto(File photo) {
		this.photo = photo;
	}

	public List<Instrutor> getListaInstrutores() {
		return listaInstrutores;
	}

	public void setListaInstrutores(List<Instrutor> instrutores) {
		this.listaInstrutores = instrutores;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public int getStatus() {
		return status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	public List<Pedido> getListaPedidos() {
		return listaPedidos;
	}

	public void setListaPedidos(List<Pedido> listaPedidos) {
		this.listaPedidos = listaPedidos;
	}

	public List<Carrinho> getListaCarrinhos() {
		return listaCarrinhos;
	}

	public void setListaCarrinhos(List<Carrinho> listaCarrinhos) {
		this.listaCarrinhos = listaCarrinhos;
	}

	public List<Modulo> getListaModulos() {
		return listaModulos;
	}

	public void setListaModulos(List<Modulo> listaModulos) {
		this.listaModulos = listaModulos;
	}
	
	
	
	

}
